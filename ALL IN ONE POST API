//APP JSX

// import React from "react";
import RegisterForm from "../src/RegisterForm";
import EmployeeList from "../src/EmployeeList";
import "./index.css";
import React, { useState, useEffect } from "react";


const App = () => {
  const [registeredUsers, setRegisteredUsers] = useState([]);

  const handleRegister = (user) => {
    setRegisteredUsers((prev) => [...prev, user]);
  };

  return (
    <div>
      <RegisterForm onRegister={handleRegister} />
      <EmployeeList />
      <div>
        <h2>Registered Users</h2>
        {registeredUsers.map((user, index) => (
          <div key={index}>
            <h3>{user.name}</h3>
            <p>Email: {user.email}</p>
            <p>Phone: {user.phone}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default App;




import React, { useState, useEffect } from "react";

const EmployeeList = () => {
  const [employees, setEmployees] = useState([]);

  useEffect(() => {
    const fetchEmployees = async () => {
      try {
        const response = await fetch(
          "https://jsonplaceholder.typicode.com/users"
        );
        const data = await response.json();
        setEmployees(data);
      } catch (error) {
        console.error("Error fetching employees:", error);
      }
    };

    fetchEmployees();
  }, []);

  return (
    <div>
      <h2>Employee List</h2>
      <div>
        {employees.map((employee) => (
          <div key={employee.id}>
            <h3>{employee.name}</h3>
            <p>Email: {employee.email}</p>
            <p>Phone: {employee.phone}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default EmployeeList;





import React, { useState } from "react";

const RegisterForm = ({ onRegister }) => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [error, setError] = useState(null); // To capture form submission errors

  const handleSubmit = async (e) => {
    e.preventDefault();
    const newUser = { name, email, phone };

    try {
      const response = await fetch("https://jsonplaceholder.typicode.com/posts", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(newUser),
      });

      if (!response.ok) {
        throw new Error("Failed to submit form");
      }

      const data = await response.json();
      onRegister(data);  // Send response data to parent component
      setName("");
      setEmail("");
      setPhone("");
      setError(null);  // Clear any previous errors
    } catch (error) {
      setError(error.message); // Display error if request fails
      console.error("Error submitting form:", error);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Register</h2>
      {error && <div style={{ color: "red" }}>{error}</div>} {/* Display error message */}
      <div>
        <label>Name</label>
        <input
          type="text"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        />
      </div>
      <div>
        <label>Email</label>
        <input
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
      </div>
      <div>
        <label>Phone</label>
        <input
          type="tel" // Changed to "tel" for better phone number input
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          required
        />
      </div>
      <button type="submit">Register</button>
    </form>
  );
};

export default RegisterForm;



